What happens when you initialize a repository? Why do you need to do it?

A hidden folder named ".git" is created to start tracking files.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

In the staging area are the files that you want to commit. In the working 
directory are all the files in the folder or directory that you are working on. 
And the repository contains the files that you want to track and the 
corresponding logs.
I think it helps you to select the files that you want to commit.

How can you use the staging area to make sure you have one commit per logical
change?

Only add the files that you want to commit to the staging area.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

The branches would be helpful if you want to create two versions of the same
project or code. Branches would help by keeping changes within branches.

How do the diagrams help you visualize the branch structure?

They help you see where the branches start and how many branches you have.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

Merging will create a new commit that has two parents. It is easier to see the
structure of the commits using the diagram.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

Git's automatic merging can be very fast and saves effort, but is very likely to
not working. Always doing merges manually insures that the user knows every
changes, but sometimes is tedious.

